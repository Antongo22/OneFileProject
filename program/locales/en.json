{
    "common": {
        "error": "Error",
        "success": "Success",
        "warning": "Warning",
        "info": "Info",
        "canceled": "Operation canceled by user",
        "version": "Version {version}",
        "author": "Author",
        "repository": "Repository",
        "information" : "Project Information"
    },
    "commands": {
        "invalid_language": "Invalid language. Use 'en' or 'ru'",
        "language_changed": "Language changed to {lang}",
        "language_change_error": "Error changing language: {error}",
        "current_language": "Current language: {lang}",
        "usage": "Usage: ofp lang [en|ru]",
        "unpack_required_args": "Error: unpack requires 2 arguments - the documentation file and the target folder",
        "path_not_exists": "Error: Path '{path}' does not exist!",
        "not_directory": "Error: '{path}' is not a directory!",
        "loading_help_error": "Error loading help: {error}",
        "config_reset": "Config file has been reset",
        "config_not_exists": "Config file does not exist",
        "reset_config_error": "Error resetting config: {error}",
        "output_reset": "Output file {path} has been reset",
        "output_not_exists": "Output file {path} does not exist",
        "reset_output_error": "Error resetting output file: {error}",
        "output_path_not_set": "Output path is not set in config",
        "invalid_reset_option": "Invalid reset option. Use -c for config or -o for output",
        "output_not_found": "Error: Output file not found in config or latest paths",
        "opened_output": "Opened output file: {path}",
        "open_file_error": "Error opening file: {error}",
        "config_not_found": "Error: Config file not found in standard or latest paths",
        "opened_config": "Opened config file: {path}",
        "open_config_error": "Error opening config file: {error}",
        "loading_config_error": "Error loading config: {error}",
        "saving_config_error": "Error saving config: {error}",
        "config_saved": "Configuration saved successfully in {path}",
        "no_project_path": "Cannot save config: project path is not set",
        "no_valid_config": "Error: No valid config file found",
        "using_parent_dir": "Using parent directory of config file as project path: {path}",
        "latest_paths_config": "Using output path from latest paths: {path}",
        "file_creation_error": "‚ö†Ô∏è Failed to create {file} file: {error}",
        "unpack_success": "‚úÖ The project has been successfully unpacked in: {path}",
        "unpack_error": "‚ùå Unpacking error: {error}",
        "doc_section_not_found": "Error: The section with the project structure was not found.",
        "file_not_found": "Error: The documentation file '{path}' was not found",
        "target_not_empty": "Error: The target directory '{path}' is not empty",
        "project_required": "Error: Project path is required!",
        "dir_not_exists": "Error: Directory '{path}' does not exist!",
        "doc_generated": "Documentation generated successfully!",
        "output_file": "Output file: {path}",
        "files_processed": "Total files processed: {count}",
        "scanning_structure": "Scanning project structure...",
        "generating_docs": "Generating documentation...",
        "doc_regenerated": "Documentation regenerated successfully!",
        "cache_warning": "‚ùóÔ∏è The entire cache will be cleared!"
    },
    "installer": {
        "install_start": "üîÑ Installing the program in: {path}",
        "install_complete": "‚úÖ The installation is complete! Now use the command '{cmd}'",
        "install_error": "‚ùå Installation error: {error}",
        "deps_install": "üîÑ Installing dependencies from requirements.txt...",
        "deps_installed": "‚úÖ Dependencies installed successfully",
        "deps_install_error": "‚ùå Failed to install dependencies: {error}",
        "deps_install_unknown": "‚ùå Error installing dependencies: {error}",
        "requirements_not_found": "‚ö†Ô∏è requirements.txt not found, skipping dependencies installation",
        "update_start": "üîÑ Cloning the repository for updating (current version: {version})...",
        "update_complete": "‚úÖ The program has been successfully updated from {old_version} to {new_version}!",
        "update_error": "‚ùå Update error: {error}",
        "git_error": "‚ùå Error when executing git: {error}",
        "not_installed": "‚ùå The program is not installed. First, perform the installation.",
        "uninstall_deleted_dir": "‚úÖ Deleted directory: {path}",
        "uninstall_deleted_cmd": "‚úÖ The command was deleted: {cmd}",
        "uninstall_error": "‚ùå Deletion error: {error}",
        "unknown_command": "‚ùå Unknown team. Available commands: install, uninstall, update",
        "path_instructions_win": "‚ö†Ô∏è For a team to work from anywhere:\n1. Press Win+R, type 'sysdm.cpl' and press Enter\n2. Go to the 'Advanced' tab\n3. Click on 'Environment Variables'\n4. In the 'System Variables' section, find the 'Path' and click 'Edit'\n5. Add a new path: {path}",
        "path_instructions_linux": "‚ö†Ô∏è Add it to ~/.bashrc or ~/.zshrc:\nexport PATH=\"$PATH:{path}\"\nAnd run: source ~/.bashrc"
    },
    "tui": {
        "config_saved": "Configuration saved!",
        "json_error": "JSON error: {error}",
        "generation_preparing": "Preparing for generation...",
        "generation_canceled": "Canceled",
        "generation_started": "Documentation generation in progress...",
        "generation_complete": "Generation complete!\n{result}",
        "generation_error": "Generation error: {error}",
        "opening_doc": "Opening documentation...",
        "doc_not_found_red": "Documentation not found!",
        "doc_opened_green": "Documentation opened:\n{path}",
        "open_error_red": "Error: {error}",
        "opening_config": "Trying to open config...",
        "config_not_found_red": "Config not found!",
        "config_opened_green": "Config opened in {path}",
        "config_error_red": "Error: {error}",
        "info_error": "Error loading info",
        "unpack_paths_required": "Specify both paths!",
        "unpack_error_red": "Error: {error}"
    }
}